[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "gap"
dynamic = ["version", "dependencies"]
authors = [
    { name = "k8thekat", email = "Cadwalladerkatelynn@gmail.com" },
]
readme = { file = "README.md", content-type = "text/markdown" }
description = "A Python wrapper for the Google API."
requires-python = ">=3.12.0"
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.12",
    "Framework :: AsyncIO",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Typing :: Typed",
]
keywords = ["google", "api"]
[project.urls]
GitHub = "https://github.com/k8thekat/GoogleAPI-python"

[tool.setuptools.dynamic]
dependencies = { file = "requirements.txt" }
version = { attr = "gap.__version__" }

[tool.setuptools]
packages = ["gap"]
include-package-data = true

[tool.ruff]
target-version = "py310"
line-length = 125

[tool.ruff.lint]
exclude = ["docs/extensions/*.py", "logs"]
select = [
    "A",
    "C4",
    "F",
    "G",
    "I",
    "PTH",
    "RUF",
    "SIM",
    "TC",
    "UP",
    "W",
    "PERF",
    "ANN",
]
ignore = [
    "F401",
    "F402",
    "F403",
    "F405",
    "PERF203",
    "RUF001",
    "RUF009",
    "SIM105",
    "UP034",
    "UP038",
    "UP007",
    "ANN401",
    "RUF052", # for filtering "local dummy variable is accessed" eg. - vars using `_`
]

[tool.ruff.lint.isort]
split-on-trailing-comma = false
combine-as-imports = true

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false
parametrize-names-type = "tuple"

[tool.pyright]
useLibraryCodeForTypes = true
typeCheckingMode = "standard"
pythonVersion = "3.12"
reportIncompatibleMethodOverride = false
exclude = ["logs/**", "**/.venv/**"]
